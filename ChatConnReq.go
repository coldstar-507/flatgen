// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatgen

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ChatConnReqT struct {
	Root string `json:"root"`
	DeviceId string `json:"device_id"`
}

func (t *ChatConnReqT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	rootOffset := builder.CreateString(t.Root)
	deviceIdOffset := builder.CreateString(t.DeviceId)
	ChatConnReqStart(builder)
	ChatConnReqAddRoot(builder, rootOffset)
	ChatConnReqAddDeviceId(builder, deviceIdOffset)
	return ChatConnReqEnd(builder)
}

func (rcv *ChatConnReq) UnPackTo(t *ChatConnReqT) {
	t.Root = string(rcv.Root())
	t.DeviceId = string(rcv.DeviceId())
}

func (rcv *ChatConnReq) UnPack() *ChatConnReqT {
	if rcv == nil { return nil }
	t := &ChatConnReqT{}
	rcv.UnPackTo(t)
	return t
}

type ChatConnReq struct {
	_tab flatbuffers.Table
}

func GetRootAsChatConnReq(buf []byte, offset flatbuffers.UOffsetT) *ChatConnReq {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ChatConnReq{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsChatConnReq(buf []byte, offset flatbuffers.UOffsetT) *ChatConnReq {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ChatConnReq{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ChatConnReq) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ChatConnReq) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ChatConnReq) Root() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ChatConnReq) DeviceId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ChatConnReqStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ChatConnReqAddRoot(builder *flatbuffers.Builder, root flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(root), 0)
}
func ChatConnReqAddDeviceId(builder *flatbuffers.Builder, deviceId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(deviceId), 0)
}
func ChatConnReqEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
